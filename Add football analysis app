<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–§—É—Ç–±–æ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –º–∞—Ç—á–µ–π</title>
    <style>
        :root {
            --primary: #2e7d32;
            --primary-light: #4caf50;
            --secondary: #ff9800;
            --danger: #f44336;
            --dark: #333;
            --light: #f5f5f5;
            --gray: #9e9e9e;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            color: var(--dark);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
            overflow: hidden;
        }
        
        header {
            background: var(--primary);
            color: white;
            padding: 25px;
            text-align: center;
        }
        
        header h1 {
            font-size: 2.2rem;
            margin-bottom: 10px;
        }
        
        header .subtitle {
            font-size: 1.1rem;
            opacity: 0.9;
        }
        
        .main-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 0;
            min-height: 600px;
        }
        
        @media (max-width: 768px) {
            .main-content {
                grid-template-columns: 1fr;
            }
        }
        
        .input-section {
            padding: 30px;
            background: var(--light);
            border-right: 2px dashed var(--gray);
        }
        
        .output-section {
            padding: 30px;
            background: white;
        }
        
        .form-group {
            margin-bottom: 25px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: var(--dark);
        }
        
        input, select, textarea {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.3s;
        }
        
        input:focus, select:focus, textarea:focus {
            border-color: var(--primary);
            outline: none;
            box-shadow: 0 0 0 3px rgba(46, 125, 50, 0.2);
        }
        
        textarea {
            min-height: 150px;
            resize: vertical;
            font-family: monospace;
        }
        
        .btn {
            padding: 14px 25px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }
        
        .btn-primary {
            background: var(--primary);
            color: white;
        }
        
        .btn-primary:hover {
            background: var(--primary-light);
            transform: translateY(-2px);
        }
        
        .btn-secondary {
            background: var(--secondary);
            color: white;
        }
        
        .btn-secondary:hover {
            background: #e68900;
        }
        
        .btn-danger {
            background: var(--danger);
            color: white;
        }
        
        .btn-full {
            width: 100%;
        }
        
        .btn-group {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }
        
        .analysis-tabs {
            margin-top: 20px;
        }
        
        .tab-headers {
            display: flex;
            border-bottom: 2px solid #eee;
            margin-bottom: 20px;
        }
        
        .tab-header {
            padding: 12px 20px;
            cursor: pointer;
            font-weight: 600;
            border-bottom: 3px solid transparent;
            transition: all 0.3s;
        }
        
        .tab-header.active {
            border-bottom: 3px solid var(--primary);
            color: var(--primary);
        }
        
        .tab-content {
            display: none;
            animation: fadeIn 0.5s;
        }
        
        .tab-content.active {
            display: block;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        .confidence-bar {
            height: 10px;
            background: #eee;
            border-radius: 5px;
            margin: 10px 0;
            overflow: hidden;
        }
        
        .confidence-fill {
            height: 100%;
            border-radius: 5px;
            transition: width 0.5s;
        }
        
        .high-confidence { background: var(--primary); }
        .medium-confidence { background: var(--secondary); }
        .low-confidence { background: var(--danger); }
        
        .analysis-card {
            background: white;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 15px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.08);
            border-left: 4px solid var(--primary);
        }
        
        .analysis-card h3 {
            margin-bottom: 10px;
            color: var(--primary);
        }
        
        .history-item {
            padding: 15px;
            border: 1px solid #eee;
            border-radius: 8px;
            margin-bottom: 10px;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .history-item:hover {
            background: #f9f9f9;
            border-color: var(--primary-light);
        }
        
        .match-title {
            font-weight: 600;
            margin-bottom: 5px;
        }
        
        .match-date {
            color: var(--gray);
            font-size: 0.9rem;
        }
        
        .instructions {
            background: #e3f2fd;
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
            border-left: 4px solid #2196f3;
        }
        
        .instructions h3 {
            color: #1976d2;
            margin-bottom: 10px;
        }
        
        .step {
            display: flex;
            align-items: flex-start;
            margin-bottom: 15px;
        }
        
        .step-number {
            background: #2196f3;
            color: white;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 15px;
            flex-shrink: 0;
        }
        
        .risk-factor {
            display: inline-block;
            padding: 4px 10px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            margin-right: 8px;
            margin-bottom: 8px;
        }
        
        .risk-high { background: #ffebee; color: #c62828; }
        .risk-medium { background: #fff3e0; color: #ef6c00; }
        .risk-low { background: #e8f5e9; color: #2e7d32; }
        
        .bet-option {
            background: #f5f5f5;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 10px;
            border-left: 4px solid var(--secondary);
        }
        
        .hidden {
            display: none;
        }
        
        .success-message {
            background: #e8f5e9;
            color: #2e7d32;
            padding: 10px 15px;
            border-radius: 5px;
            margin: 10px 0;
            text-align: center;
            animation: fadeIn 0.5s;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>‚öΩ –§—É—Ç–±–æ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –º–∞—Ç—á–µ–π</h1>
            <div class="subtitle">–£–ª—É—á—à–µ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω v2.0 –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —É–≥–ª–æ–≤—ã—Ö –∏ –∂–µ–ª—Ç—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫</div>
        </header>
        
        <div class="main-content">
            <div class="input-section">
                <div class="form-group">
                    <label for="matchInput">–ú–∞—Ç—á –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞</label>
                    <input type="text" id="matchInput" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ë–æ—Ä–Ω–º—É—Ç-–§—É–ª—Ö—ç–º 3 –æ–∫—Ç—è–±—Ä—è">
                </div>
                
                <div class="form-group">
                    <label for="analysisType">–¢–∏–ø –∞–Ω–∞–ª–∏–∑–∞</label>
                    <select id="analysisType">
                        <option value="full">–ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ (—É–≥–ª–æ–≤—ã–µ + –∫–∞—Ä—Ç–æ—á–∫–∏)</option>
                        <option value="corners">–¢–æ–ª—å–∫–æ —É–≥–ª–æ–≤—ã–µ</option>
                        <option value="cards">–¢–æ–ª—å–∫–æ –∂–µ–ª—Ç—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏</option>
                    </select>
                </div>
                
                <button id="generatePrompt" class="btn btn-primary btn-full">
                    üìã –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
                </button>
                
                <div class="instructions">
                    <h3>üìù –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</h3>
                    <div class="step">
                        <div class="step-number">1</div>
                        <div>–í–≤–µ–¥–∏—Ç–µ –º–∞—Ç—á –∏ –Ω–∞–∂–º–∏—Ç–µ "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º—Ç"</div>
                    </div>
                    <div class="step">
                        <div class="step-number">2</div>
                        <div>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º—Ç</div>
                    </div>
                    <div class="step">
                        <div class="step-number">3</div>
                        <div>–í—Å—Ç–∞–≤—å—Ç–µ –ø—Ä–æ–º—Ç –≤ DeepSeek Chat</div>
                    </div>
                    <div class="step">
                        <div class="step-number">4</div>
                        <div>–û—Ç–≤–µ—Ç –æ—Ç –ò–ò –≤—Å—Ç–∞–≤—å—Ç–µ –≤ –ø–æ–ª–µ –Ω–∏–∂–µ</div>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="aiResponse">–û—Ç–≤–µ—Ç –æ—Ç –ò–ò (–≤—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞)</label>
                    <textarea id="aiResponse" placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –æ—Ç–≤–µ—Ç –æ—Ç DeepSeek..."></textarea>
                </div>
                
                <button id="parseResponse" class="btn btn-secondary btn-full">
                    üéØ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç
                </button>
                
                <div class="form-group">
                    <h3>üìä –ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤</h3>
                    <div id="historyList"></div>
                </div>
            </div>
            
            <div class="output-section">
                <div id="promptOutput" class="hidden">
                    <div class="form-group">
                        <label>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º—Ç (—Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ DeepSeek)</label>
                        <textarea id="promptText" readonly></textarea>
                    </div>
                    <button id="copyPrompt" class="btn btn-primary">
                        üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º—Ç
                    </button>
                    <div id="copySuccess" class="success-message hidden">–ü—Ä–æ–º—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!</div>
                </div>
                
                <div id="analysisOutput" class="hidden">
                    <h2>–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞</h2>
                    <div class="analysis-tabs">
                        <div class="tab-headers">
                            <div class="tab-header active" data-tab="summary">–û–±–∑–æ—Ä</div>
                            <div class="tab-header" data-tab="corners">–£–≥–ª–æ–≤—ã–µ</div>
                            <div class="tab-header" data-tab="cards">–ö–∞—Ä—Ç–æ—á–∫–∏</div>
                            <div class="tab-header" data-tab="bets">–°—Ç–∞–≤–∫–∏</div>
                        </div>
                        
                        <div class="tab-content active" id="summary-tab">
                            <div class="analysis-card">
                                <h3>üìà –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ –º–∞—Ç—á–∞</h3>
                                <div id="summaryContent"></div>
                            </div>
                        </div>
                        
                        <div class="tab-content" id="corners-tab">
                            <div class="analysis-card">
                                <h3>üöÄ –ê–Ω–∞–ª–∏–∑ —É–≥–ª–æ–≤—ã—Ö</h3>
                                <div id="cornersContent"></div>
                            </div>
                        </div>
                        
                        <div class="tab-content" id="cards-tab">
                            <div class="analysis-card">
                                <h3>‚öñÔ∏è –ê–Ω–∞–ª–∏–∑ –∫–∞—Ä—Ç–æ—á–µ–∫</h3>
                                <div id="cardsContent"></div>
                            </div>
                        </div>
                        
                        <div class="tab-content" id="bets-tab">
                            <div class="analysis-card">
                                <h3>üéØ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Å—Ç–∞–≤–∫–∏</h3>
                                <div id="betsContent"></div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div id="emptyState">
                    <div style="text-align: center; padding: 40px; color: #666;">
                        <h2>üëÜ –ù–∞—á–Ω–∏—Ç–µ –∞–Ω–∞–ª–∏–∑</h2>
                        <p>–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –º–∞—Ç—á–∞ —Å–ª–µ–≤–∞, —á—Ç–æ–±—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
            const matchInput = document.getElementById('matchInput');
            const analysisType = document.getElementById('analysisType');
            const generatePromptBtn = document.getElementById('generatePrompt');
            const aiResponse = document.getElementById('aiResponse');
            const parseResponseBtn = document.getElementById('parseResponse');
            const promptOutput = document.getElementById('promptOutput');
            const promptText = document.getElementById('promptText');
            const copyPromptBtn = document.getElementById('copyPrompt');
            const copySuccess = document.getElementById('copySuccess');
            const analysisOutput = document.getElementById('analysisOutput');
            const emptyState = document.getElementById('emptyState');
            const historyList = document.getElementById('historyList');
            const tabHeaders = document.querySelectorAll('.tab-header');
            const tabContents = document.querySelectorAll('.tab-content');
            
            // –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑ LocalStorage
            let history = JSON.parse(localStorage.getItem('footballAnalysisHistory')) || [];
            renderHistory();
            
            // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–º—Ç–∞
            generatePromptBtn.addEventListener('click', function() {
                const match = matchInput.value.trim();
                if (!match) {
                    alert('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ç—á–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞');
                    return;
                }
                
                const type = analysisType.value;
                const prompt = generatePrompt(match, type);
                
                promptText.value = prompt;
                promptOutput.classList.remove('hidden');
                emptyState.classList.add('hidden');
                analysisOutput.classList.add('hidden');
                
                // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
                addToHistory(match, type);
            });
            
            // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º—Ç–∞
            copyPromptBtn.addEventListener('click', function() {
                promptText.select();
                document.execCommand('copy');
                
                copySuccess.classList.remove('hidden');
                setTimeout(() => {
                    copySuccess.classList.add('hidden');
                }, 3000);
            });
            
            // –ê–Ω–∞–ª–∏–∑ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò
            parseResponseBtn.addEventListener('click', function() {
                const response = aiResponse.value.trim();
                if (!response) {
                    alert('–í—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç –æ—Ç DeepSeek –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞');
                    return;
                }
                
                parseAIResponse(response);
                analysisOutput.classList.remove('hidden');
                emptyState.classList.add('hidden');
            });
            
            // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
            tabHeaders.forEach(header => {
                header.addEventListener('click', function() {
                    const tabId = this.getAttribute('data-tab');
                    
                    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                    tabHeaders.forEach(h => h.classList.remove('active'));
                    tabContents.forEach(c => c.classList.remove('active'));
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Ç–µ–∫—É—â–µ–º—É
                    this.classList.add('active');
                    document.getElementById(`${tabId}-tab`).classList.add('active');
                });
            });
            
            // –§—É–Ω–∫—Ü–∏–∏
            function generatePrompt(match, type) {
                let prompt = `–ü–†–û–ê–ù–ê–õ–ò–ó–ò–†–£–ô –ú–ê–¢–ß: ${match} –ø–æ —É–ª—É—á—à–µ–Ω–Ω–æ–º—É —à–∞–±–ª–æ–Ω—É v2.0:\n\n`;
                
                if (type === 'full' || type === 'corners') {
                    prompt += `üöÄ –£–õ–£–ß–®–ï–ù–ù–´–ô –®–ê–ë–õ–û–ù –î–õ–Ø –£–ì–õ–û–í–´–•:
1. –£–ì–õ–û–í–´–ï (CORNERS):
üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
- –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∞—Ç–∞–∫: (–£–≥–ª–æ–≤—ã–µ / –û–ø–∞—Å–Ω—ã–µ –∞—Ç–∞–∫–∏) √ó 100%
- –ö–æ–Ω–≤–µ—Ä—Å–∏—è —É–≥–ª–æ–≤—ã—Ö –≤ –≥–æ–ª–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã
- –¢—Ä–µ–Ω–¥—ã –ø–æ —Ç–∞–π–º–∞–º

üéØ –¢–∞–∫—Ç–∏–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤
- –ü–∞—Ç—Ç–µ—Ä–Ω—ã —Ä–æ–∑—ã–≥—Ä—ã—à–∞
- –ö–ª—é—á–µ–≤—ã–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏
- –ü—Ä–æ—Ü–µ–Ω—Ç –æ–±–≤–æ–¥–Ω—ã—Ö –∞—Ç–∞–∫

üîç –ì–ª—É–±–∏–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–º–µ–Ω
- –í–ª–∏—è–Ω–∏–µ –∑–∞–º–µ–Ω –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≥–ª–æ–≤—ã—Ö
- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ/–ø–æ—Å–ª–µ –∫–ª—é—á–µ–≤—ã—Ö –∑–∞–º–µ–Ω\n\n`;
                }
                
                if (type === 'full' || type === 'cards') {
                    prompt += `2. –ñ–ï–õ–¢–´–ï –ö–ê–†–¢–û–ß–ö–ò (CARDS):
‚öñÔ∏è –®–∫–∞–ª–∞ —Å—Ç—Ä–æ–≥–æ—Å—Ç–∏ –∞—Ä–±–∏—Ç—Ä–∞ (1-2 –∫–∞—Ä—Ç ‚Üí –õ–∏–±–µ—Ä–∞–ª—å–Ω—ã–π, 3-4 ‚Üí –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π, 5+ ‚Üí –°—Ç—Ä–æ–≥–∏–π)

üìà –î–∏–Ω–∞–º–∏–∫–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–π
- –ö–∞—Ä—Ç–∞ —Ä–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤
- –¢–∏–ø—ã —Ñ–æ–ª–æ–≤
- –ó–æ–Ω—ã –Ω–∞—Ä—É—à–µ–Ω–∏–π

üé™ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä
- –ë—ã–≤—à–∏–µ –∏–≥—Ä–æ–∫–∏ –ø—Ä–æ—Ç–∏–≤ –∫–æ–º–∞–Ω–¥
- –õ–∏—á–Ω—ã–µ –ø—Ä–æ—Ç–∏–≤–æ—Å—Ç–æ—è–Ω–∏—è
- –†–µ–∞–∫—Ü–∏—è –Ω–∞ –ø–µ—Ä–≤—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏\n\n`;
                }
                
                prompt += `3. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–ê–ö–¢–û–†–´:
üîÑ –ö—Ä–æ—Å—Å-–∞–Ω–∞–ª–∏–∑ –≤–ª–∏—è–Ω–∏—è
- –ü–æ–≥–æ–¥–∞ –Ω–∞ —É–≥–ª–æ–≤—ã–µ –∏ –∫–∞—Ä—Ç–æ—á–∫–∏
- –í–∑–∞–∏–º–æ—Å–≤—è–∑—å —Ç–µ–º–ø–∞ –∏–≥—Ä—ã –∏ –Ω–∞—Ä—É—à–µ–Ω–∏–π

4. –°–ò–°–¢–ï–ú–ê –û–¶–ï–ù–û–ö:
üéöÔ∏è –£—Ä–æ–≤–µ–Ω—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ (–í—ã—Å–æ–∫–∏–π 80%+, –°—Ä–µ–¥–Ω–∏–π 60-80%, –ù–∏–∑–∫–∏–π <60%)

‚ö†Ô∏è –§–∞–∫—Ç–æ—Ä—ã —Ä–∏—Å–∫–∞
- –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–∞–≤—ã
- –†–∞–Ω–Ω—è—è –∫—Ä–∞—Å–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
- –ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è

5. –í–ê–†–ò–ê–ù–¢–´ –°–¢–ê–í–û–ö:
üéØ –û—Å–Ω–æ–≤–Ω—ã–µ: –¢–æ—Ç–∞–ª—ã —É–≥–ª–æ–≤—ã—Ö/–∫–∞—Ä—Ç–æ—á–µ–∫, –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ç–æ—Ç–∞–ª—ã
üîÑ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ: –£–≥–ª–æ–≤—ã–µ + –∫–∞—Ä—Ç–æ—á–∫–∏
üìà –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ: –°—Ç–∞–≤–∫–∏ –≤ –ª–∞–π–≤–µ

–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –∞–Ω–∞–ª–∏–∑ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ü–∏—Ñ—Ä–∞–º–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏.`;
                
                return prompt;
            }
            
            function parseAIResponse(response) {
                // –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–∏–Ω–≥ –æ—Ç–≤–µ—Ç–∞ (–º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å)
                document.getElementById('summaryContent').innerHTML = 
                    `<p>${response}</p>`;
                
                document.getElementById('cornersContent').innerHTML = `
                    <div class="confidence-bar">
                        <div class="confidence-fill high-confidence" style="width: 75%"></div>
                    </div>
                    <p><strong>–£—Ä–æ–≤–µ–Ω—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏:</strong> –í—ã—Å–æ–∫–∏–π (75%)</p>
                    <p>${extractSection(response, '—É–≥–ª–æ–≤—ã–µ') || '–ê–Ω–∞–ª–∏–∑ —É–≥–ª–æ–≤—ã—Ö –∏–∑ –æ—Ç–≤–µ—Ç–∞ –ò–ò'}</p>
                `;
                
                document.getElementById('cardsContent').innerHTML = `
                    <div class="confidence-bar">
                        <div class="confidence-fill medium-confidence" style="width: 65%"></div>
                    </div>
                    <p><strong>–£—Ä–æ–≤–µ–Ω—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏:</strong> –°—Ä–µ–¥–Ω–∏–π (65%)</p>
                    <p>${extractSection(response, '–∫–∞—Ä—Ç–æ—á–∫') || '–ê–Ω–∞–ª–∏–∑ –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–∑ –æ—Ç–≤–µ—Ç–∞ –ò–ò'}</p>
                `;
                
                document.getElementById('betsContent').innerHTML = `
                    <div class="bet-option">
                        <h4>üìà –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞–≤–∫–∞</h4>
                        <p>–¢–æ—Ç–∞–ª —É–≥–ª–æ–≤—ã—Ö –±–æ–ª—å—à–µ 9.5</p>
                        <span class="risk-factor risk-medium">–°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫</span>
                    </div>
                    <div class="bet-option">
                        <h4>üîÑ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞–≤–∫–∞</h4>
                        <p>–£–≥–ª–æ–≤—ã–µ –¢–ë 9.5 + –ñ–µ–ª—Ç—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –¢–ë 3.5</p>
                        <span class="risk-factor risk-high">–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫</span>
                    </div>
                    <p>${extractSection(response, '—Å—Ç–∞–≤–∫') || '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å—Ç–∞–≤–∫–∞–º –∏–∑ –æ—Ç–≤–µ—Ç–∞ –ò–ò'}</p>
                `;
            }
            
            function extractSection(text, keyword) {
                // –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Å–µ–∫—Ü–∏–π –∏–∑ –æ—Ç–≤–µ—Ç–∞
                const lines = text.split('\n');
                let section = '';
                let inSection = false;
                
                for (let line of lines) {
                    if (line.toLowerCase().includes(keyword)) {
                        inSection = true;
                    }
                    if (inSection) {
                        section += line + '<br>';
                    }
                }
                
                return section || null;
            }
            
            function addToHistory(match, type) {
                const timestamp = new Date().toLocaleString();
                history.unshift({ match, type, timestamp });
                
                // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é 10 –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏
                if (history.length > 10) {
                    history = history.slice(0, 10);
                }
                
                localStorage.setItem('footballAnalysisHistory', JSON.stringify(history));
                renderHistory();
            }
            
            function renderHistory() {
                historyList.innerHTML = '';
                
                if (history.length === 0) {
                    historyList.innerHTML = '<p>–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—É—Å—Ç–∞</p>';
                    return;
                }
                
                history.forEach(item => {
                    const historyItem = document.createElement('div');
                    historyItem.className = 'history-item';
                    historyItem.innerHTML = `
                        <div class="match-title">${item.match}</div>
                        <div class="match-date">${item.timestamp} ‚Ä¢ ${getTypeLabel(item.type)}</div>
                    `;
                    
                    historyItem.addEventListener('click', function() {
                        matchInput.value = item.match;
                        analysisType.value = item.type;
                    });
                    
                    historyList.appendChild(historyItem);
                });
            }
            
            function getTypeLabel(type) {
                const labels = {
                    'full': '–ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑',
                    'corners': '–¢–æ–ª—å–∫–æ —É–≥–ª–æ–≤—ã–µ',
                    'cards': '–¢–æ–ª—å–∫–æ –∫–∞—Ä—Ç–æ—á–∫–∏'
                };
                return labels[type] || type;
            }
        });
    </script>
</body>
</html>
